<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<qualifiedTypeNameHistroy>
    <fullyQualifiedTypeName name="org.springframework.web.bind.annotation.RequestBody"/>
    <fullyQualifiedTypeName name="org.springframework.web.bind.annotation.PutMapping"/>
    <fullyQualifiedTypeName name="com.springbootbackend.services.EmployeeServices"/>
    <fullyQualifiedTypeName name="com.springbootbackend.repository.EmployeeRepository"/>
    <fullyQualifiedTypeName name="org.springframework.boot.test.mock.mockito.MockBean"/>
    <fullyQualifiedTypeName name="com.springbootbackend.model.Employee"/>
    <fullyQualifiedTypeName name="lombok.Builder"/>
    <fullyQualifiedTypeName name="org.mockito.Mockito"/>
    <fullyQualifiedTypeName name="org.apache.el.stream.Optional"/>
    <fullyQualifiedTypeName name="java.util.Optional"/>
    <fullyQualifiedTypeName name="org.springframework.web.bind.annotation.PathVariable"/>
    <fullyQualifiedTypeName name="org.springframework.web.bind.annotation.GetMapping"/>
    <fullyQualifiedTypeName name="com.springbootbackend.exception.ResourceNotFoundException"/>
    <fullyQualifiedTypeName name="org.springframework.http.ResponseEntity"/>
    <fullyQualifiedTypeName name="org.springframework.http.HttpStatus"/>
    <fullyQualifiedTypeName name="java.lang.Override"/>
    <fullyQualifiedTypeName name="com.java.example.Employee"/>
    <fullyQualifiedTypeName name="java.lang.System"/>
    <fullyQualifiedTypeName name="java.util.ArrayList"/>
    <fullyQualifiedTypeName name="java.util.Set"/>
    <fullyQualifiedTypeName name="java.util.HashMap"/>
    <fullyQualifiedTypeName name="java.util.Map"/>
    <fullyQualifiedTypeName name="java.util.Map.Entry"/>
    <fullyQualifiedTypeName name="java.util.LinkedHashMap"/>
    <fullyQualifiedTypeName name="java.util.function.Function"/>
    <fullyQualifiedTypeName name="java.util.function.BiFunction"/>
    <fullyQualifiedTypeName name="java.util.function.Predicate"/>
    <fullyQualifiedTypeName name="java.util.function.Consumer"/>
    <fullyQualifiedTypeName name="com.java.example.Functional_Interface.Person"/>
    <fullyQualifiedTypeName name="java.util.function.Supplier"/>
    <fullyQualifiedTypeName name="java.lang.Math"/>
    <fullyQualifiedTypeName name="java.util.Arrays"/>
    <fullyQualifiedTypeName name="java.util.stream.IntStream"/>
    <fullyQualifiedTypeName name="java.util.stream.Collectors"/>
    <fullyQualifiedTypeName name="jakarta.persistence.Entity"/>
    <fullyQualifiedTypeName name="jakarta.persistence.Table"/>
    <fullyQualifiedTypeName name="jakarta.persistence.Id"/>
    <fullyQualifiedTypeName name="jakarta.persistence.Column"/>
    <fullyQualifiedTypeName name="org.springframework.data.jpa.repository.JpaRepository"/>
    <fullyQualifiedTypeName name="com.user.service.entities.User"/>
    <fullyQualifiedTypeName name="java.util.List"/>
    <fullyQualifiedTypeName name="com.user.service.services.UserServices"/>
    <fullyQualifiedTypeName name="com.user.service.repositories.UserRepository"/>
    <fullyQualifiedTypeName name="org.springframework.beans.factory.annotation.Autowired"/>
    <fullyQualifiedTypeName name="org.springframework.stereotype.Service"/>
    <fullyQualifiedTypeName name="com.crud.app.Calculator"/>
    <fullyQualifiedTypeName name="org.junit.jupiter.api.BeforeAll"/>
    <fullyQualifiedTypeName name="org.junit.jupiter.api.AfterAll"/>
    <fullyQualifiedTypeName name="com.check.junit.practice.CheckPalindrome"/>
    <fullyQualifiedTypeName name="org.junit.jupiter.params.provider.ValueSource"/>
    <fullyQualifiedTypeName name="com.check.junit.practice.EvenOrOdd"/>
    <fullyQualifiedTypeName name="org.junit.jupiter.params.ParameterizedTest"/>
    <fullyQualifiedTypeName name="org.junit.jupiter.params.provider.CsvFileSource"/>
    <fullyQualifiedTypeName name="org.junit.jupiter.api.Test"/>
    <fullyQualifiedTypeName name="org.springframework.boot.test.context.SpringBootTest"/>
    <fullyQualifiedTypeName name="java.lang.IllegalArgumentException"/>
    <fullyQualifiedTypeName name="com.check.junit.practice.CheckException"/>
    <fullyQualifiedTypeName name="com.mock.dao.UserDao"/>
    <fullyQualifiedTypeName name="org.powermock.api.mockito.PowerMockito"/>
    <fullyQualifiedTypeName name="com.mock.service.UserService"/>
</qualifiedTypeNameHistroy>
